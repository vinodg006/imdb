{"version":3,"sources":["components/RemoveFilmModal.js","config/index.js","actions/index.js","constants/index.js","helpers/formProperties.js","components/FormFilmModal.js","components/FilmCard.js","helpers/removeSpecialChars.js","components/FilmList.js","components/Header.js","components/Film.js","components/ProtectedRoute.js","App.js","reducers/index.js","reducers/filmReducer.js","reducers/themeReducer.js","store.js","index.js"],"names":["RemoveFilmModal","deleteFilm","setOpen","open","Modal","closeIcon","centered","onClose","onOpen","icon","content","Content","Actions","Button","color","onClick","Icon","name","baseUrl","removeFilm","id","type","payload","formProperties","poster","label","title","director","year","genre","runtime","FormFilmModal","Title","Director","Year","Runtime","Genre","Poster","imdbID","dispatch","useDispatch","useState","state","setState","errors","setErrors","onInputChange","e","target","value","submit","formValues","errorsObject","validate","_","isEmpty","console","log","film","editFilm","films","useSelector","val","filmsExcludingCurrentFilm","filter","some","toLower","doesTitleExist","length","date","Date","parse","isNaN","isDateValid","Form","onSubmit","map","field","i","Field","key","control","onChange","error","FilmCard","navigate","useNavigate","showDeleteModal","setShowDeleteModal","showEditModal","setShowEditModal","Card","Image","src","alt","wrapped","Header","removeSpecialChars","str","lower","toLowerCase","upper","toUpperCase","res","trim","FilmList","showNewFilmModal","setShowNewFilmModal","Group","stackable","as","Container","itemsPerRow","startCase","link","size","darkMode","theme","Menu","inverted","Item","Film","useParams","data","fluid","style","width","cursor","Description","extra","className","basic","ProtectedRoute","children","Object","keys","to","pathname","replace","App","useEffect","a","axios","response","Search","promisesArray","Promise","all","values","path","element","combineReducers","action","mapKeys","omit","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ac5fd9f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Modal, Icon, Button, Header } from \"semantic-ui-react\";\r\n\r\nconst RemoveFilmModal = ({ deleteFilm, setOpen, open }) => {\r\n  return (\r\n    <Modal\r\n      closeIcon\r\n      centered={false}\r\n      open={open}\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n    >\r\n      <Header icon=\"trash\" content=\"Delete Film\" />\r\n      <Modal.Content>\r\n        <p>Are you sure you want to delete this film?</p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button color=\"red\" onClick={() => setOpen(false)}>\r\n          <Icon name=\"remove\" /> No\r\n        </Button>\r\n        <Button color=\"green\" onClick={deleteFilm}>\r\n          <Icon name=\"checkmark\" /> Yes\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RemoveFilmModal;\r\n","export const apiKey = \"b5677617\";\r\nexport const baseUrl = \"https://www.omdbapi.com\";\r\n","import axios from \"axios\";\r\nimport { EDIT_FILM, FETCH_FILMS, REMOVE_FILM, ADD_FILM } from \"../constants\";\r\nimport { apiKey, baseUrl } from \"../config\";\r\n\r\nexport const fetchFilms = () => {\r\n  const filmTitle = \"war\";\r\n\r\n  return async (dispatch) => {\r\n    const response = (\r\n      await axios(`${baseUrl}/?s=${filmTitle}&apikey=${apiKey}`)\r\n    ).data.Search;\r\n    const promisesArray = response.map((film) =>\r\n      axios(`${baseUrl}/?t=${film.Title}&apikey=${apiKey}`)\r\n    );\r\n    const values = (await Promise.all(promisesArray)).map(\r\n      (value) => value.data\r\n    );\r\n    dispatch({\r\n      type: FETCH_FILMS,\r\n      payload: values,\r\n    });\r\n  };\r\n};\r\n\r\nexport const removeFilm = (id) => {\r\n  return {\r\n    type: REMOVE_FILM,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const editFilm = (film) => {\r\n  return {\r\n    type: EDIT_FILM,\r\n    payload: film,\r\n  };\r\n};\r\n\r\nexport const addFilm = (film) => {\r\n  return {\r\n    type: ADD_FILM,\r\n    payload: film,\r\n  };\r\n};\r\n","export const FETCH_FILMS = \"FETCH_FILMS\";\r\nexport const REMOVE_FILM = \"REMOVE_FILM\";\r\nexport const EDIT_FILM = \"EDIT_FILM\";\r\nexport const ADD_FILM = \"ADD_FILM\";\r\nexport const TOGGLE_DARK_MODE = \"TOGGLE_DARK_MODE\";\r\n","export const formProperties = {\r\n  poster: {\r\n    label: \"Poster URL\",\r\n    name: \"Poster\",\r\n  },\r\n  title: {\r\n    label: \"Title\",\r\n    name: \"Title\",\r\n  },\r\n  director: {\r\n    label: \"Director\",\r\n    name: \"Director\",\r\n  },\r\n  year: {\r\n    label: \"Year\",\r\n    name: \"Year\",\r\n  },\r\n  genre: {\r\n    label: \"Genre\",\r\n    name: \"Genre\",\r\n  },\r\n  runtime: {\r\n    label: \"Runtime\",\r\n    name: \"Runtime\",\r\n  },\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport { Modal, Header, Form, Button } from \"semantic-ui-react\";\r\nimport { addFilm, editFilm } from \"../actions\";\r\nimport { formProperties } from \"../helpers/formProperties\";\r\n\r\nconst FormFilmModal = ({\r\n  Title,\r\n  Director,\r\n  Year,\r\n  Runtime,\r\n  Genre,\r\n  Poster,\r\n  imdbID,\r\n  setOpen,\r\n  open,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = useState({\r\n    Title,\r\n    Director,\r\n    Year,\r\n    Runtime,\r\n    Genre,\r\n    Poster,\r\n    imdbID,\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const onInputChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const submit = () => {\r\n    const formValues = state;\r\n    const errorsObject = validate(formValues);\r\n    const isFormValid = _.isEmpty(errorsObject);\r\n    if (isFormValid) {\r\n      if (!imdbID) {\r\n        dispatch(addFilm(formValues));\r\n      } else {\r\n        console.log(formValues, 'formValues')\r\n        dispatch(editFilm(formValues));\r\n      }\r\n      setOpen(false);\r\n    }\r\n    setErrors(validate(formValues));\r\n  };\r\n\r\n  const films = useSelector((state) => state.films);\r\n\r\n  const isDateValid = (val) => {\r\n    const date = Date.parse(val);\r\n    return !isNaN(date);\r\n  };\r\n\r\n  const doesTitleExist = (val) => {\r\n    const filmsExcludingCurrentFilm = _.filter(\r\n      films,\r\n      (film) => film.imdbID !== imdbID\r\n    );\r\n    return _.some(\r\n      filmsExcludingCurrentFilm,\r\n      (film) => _.toLower(film.Title) === _.toLower(val)\r\n    );\r\n  };\r\n\r\n  const validate = (formValues) => {\r\n    const errors = {};\r\n    const { Title, Director, Year, Genre, Runtime } = formValues;\r\n    if (!Title) {\r\n      errors.Title = \"Title cannot be empty\";\r\n    }\r\n    if (doesTitleExist(Title)) {\r\n      errors.Title = \"Title already exists\";\r\n    }\r\n    if (!Director) {\r\n      errors.Director = `Must specify a director\"s name`;\r\n    }\r\n    if (!Year || Year.length !== 4 || !isDateValid(Year)) {\r\n      errors.Year = \"Year must be entered with four digits, e.g. 1976\";\r\n    }\r\n    if (!Genre) {\r\n      errors.Genre = \"Must specify a genre\";\r\n    }\r\n    if (!Runtime) {\r\n      errors.Runtime = \"Must specify a runtime\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      closeIcon\r\n      centered={false}\r\n      open={open}\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n    >\r\n      <Header\r\n        icon={imdbID ? \"pencil\" : \"add\"}\r\n        content={imdbID ? \"Edit Film\" : \"Add Film\"}\r\n      />\r\n      <Modal.Content>\r\n        <Form onSubmit={submit}>\r\n          {_.map(formProperties, (field, i) => {\r\n            const { label, name } = field;\r\n            return (\r\n              <Form.Field\r\n                key={i}\r\n                control=\"input\"\r\n                label={label}\r\n                name={name}\r\n                value={state[name]}\r\n                onChange={onInputChange}\r\n                error={errors[name]}\r\n              />\r\n            );\r\n          })}\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button color=\"red\" onClick={() => setOpen(false)}>\r\n          Cancel\r\n        </Button>\r\n        <Button color=\"green\" onClick={submit}>\r\n          {imdbID ? \"Save Changes\" : \"Add Film\"}\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default FormFilmModal;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Card, Image } from \"semantic-ui-react\";\r\nimport RemoveFilmModal from \"./RemoveFilmModal\";\r\nimport FormFilmModal from \"./FormFilmModal\";\r\nimport { removeFilm } from \"../actions/index\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst FilmCard = ({\r\n  Poster,\r\n  Title,\r\n  Year,\r\n  Runtime,\r\n  Genre,\r\n  Director,\r\n  imdbID,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n\r\n  const deleteFilm = () => {\r\n    dispatch(removeFilm(imdbID));\r\n    setShowDeleteModal(false);\r\n  };\r\n\r\n  return (\r\n    <Card  onClick={() => navigate(`/movie/${imdbID}`)}>\r\n      <Image src={Poster} alt={Title} wrapped  />\r\n      <Card.Content >\r\n        <Card.Header>{Title}</Card.Header>\r\n      </Card.Content>\r\n      <FormFilmModal\r\n        deleteFilm={deleteFilm}\r\n        setOpen={setShowEditModal}\r\n        open={showEditModal}\r\n        Poster={Poster}\r\n        Title={Title}\r\n        Year={Year}\r\n        Runtime={Runtime}\r\n        Genre={Genre}\r\n        Director={Director}\r\n        imdbID={imdbID}\r\n      />\r\n      <RemoveFilmModal\r\n        deleteFilm={deleteFilm}\r\n        setOpen={setShowDeleteModal}\r\n        open={showDeleteModal}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FilmCard;\r\n","export default function removeSpecialChars(str) {\r\n  var lower = str.toLowerCase();\r\n  var upper = str.toUpperCase();\r\n\r\n  var res = \"\";\r\n  for (var i = 0; i < lower.length; ++i) {\r\n    if (lower[i] !== upper[i] || lower[i].trim() === \"\") res += str[i];\r\n  }\r\n  return res;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport { Container, Card, Icon } from \"semantic-ui-react\";\r\nimport FilmCard from \"./FilmCard\";\r\nimport FormFilmModal from \"./FormFilmModal\";\r\nimport removeSpecialChars from \"../helpers/removeSpecialChars\";\r\n\r\nconst DEFAULT_FILM_POSTER =\r\n  \"https://images.unsplash.com/photo-1518676590629-3dcbd9c5a5c9?ixlib=rb-1.2.1&auto=format&fit=crop&w=1728&q=80\";\r\n\r\nconst FilmList = () => {\r\n  const [showNewFilmModal, setShowNewFilmModal] = useState(false);\r\n  const films = useSelector((state) => state.films);\r\n\r\n  return (\r\n    <>\r\n      <Card.Group stackable as={Container} itemsPerRow={5}>\r\n        {_.map(films, (film) => {\r\n          const {\r\n            Poster,\r\n            Title,\r\n            imdbID,\r\n            Year,\r\n            Director,\r\n            Genre,\r\n            Runtime,\r\n          } = film;\r\n          return (\r\n            <FilmCard\r\n              key={imdbID}\r\n              Poster={Poster}\r\n              Title={_.startCase(_.toLower(removeSpecialChars(Title)))}\r\n              Year={Year}\r\n              Director={Director}\r\n              Runtime={Runtime}\r\n              Genre={Genre}\r\n              imdbID={imdbID}\r\n            />\r\n          );\r\n        })}\r\n      </Card.Group>\r\n      <Icon\r\n        link\r\n        size=\"massive\"\r\n        onClick={() => setShowNewFilmModal(true)}\r\n        name=\"add circle\"\r\n        title=\"Add new film\"\r\n      />\r\n      <FormFilmModal\r\n        open={showNewFilmModal}\r\n        setOpen={setShowNewFilmModal}\r\n        Poster={DEFAULT_FILM_POSTER}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilmList;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Menu, Icon } from \"semantic-ui-react\";\r\nimport { TOGGLE_DARK_MODE } from \"../constants\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate= useNavigate()\r\n\r\n  const { darkMode } = useSelector((state) => state.theme);\r\n\r\n  return (\r\n    <Menu inverted={darkMode}>\r\n      <Menu.Item onClick={() => navigate('/')}>Cinema</Menu.Item>\r\n      <Menu.Item title=\"Dark/Light Mode\">\r\n        <Icon\r\n          name={darkMode ? \"sun\" : \"moon\"}\r\n          onClick={() => dispatch({ type: TOGGLE_DARK_MODE })}\r\n        />\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector  } from \"react-redux\";\r\nimport { Card, Button, Image } from \"semantic-ui-react\";\r\nimport RemoveFilmModal from \"./RemoveFilmModal\";\r\nimport FormFilmModal from \"./FormFilmModal\";\r\nimport { removeFilm } from \"../actions/index\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst Film = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const data = useSelector(state => state.films[id]);\r\n  const {\r\n    Poster,\r\n    Title,\r\n    Year,\r\n    Runtime,\r\n    Genre,\r\n    Director,\r\n    imdbID,\r\n  } = data;\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n\r\n  console.log(id,data, 'loca')\r\n\r\n  const deleteFilm = () => {\r\n    dispatch(removeFilm(imdbID));\r\n    setShowDeleteModal(false);\r\n    navigate('/')\r\n  };\r\n\r\n  return (\r\n    <Card fluid centered style={{width: '80%'}}>\r\n        <Card.Content style={{cursor: 'pointer'}} onClick={() => navigate('/')}>Go Back</Card.Content>\r\n      <Image src={Poster} centered alt={Title} wrapped />\r\n      <Card.Content>\r\n        <Card.Header>{Title}</Card.Header>\r\n        <Card.Description>\r\n          <p>Director: {Director}</p>\r\n          <p>Year: {Year}</p>\r\n          <p>Genre: {Genre}</p>\r\n          <p>Runtime: {Runtime}</p>\r\n        </Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <div className=\"ui two buttons\">\r\n          <Button basic onClick={() => setShowDeleteModal(true)} color=\"red\">\r\n            <i className=\"fas fa-trash\" />\r\n          </Button>\r\n          <Button basic onClick={() => setShowEditModal(true)} color=\"green\">\r\n            <i className=\"fas fa-pencil-alt\"></i>\r\n          </Button>\r\n        </div>\r\n      </Card.Content>\r\n      <FormFilmModal\r\n        deleteFilm={deleteFilm}\r\n        setOpen={setShowEditModal}\r\n        open={showEditModal}\r\n        Poster={Poster}\r\n        Title={Title}\r\n        Year={Year}\r\n        Runtime={Runtime}\r\n        Genre={Genre}\r\n        Director={Director}\r\n        imdbID={imdbID}\r\n      />\r\n      <RemoveFilmModal\r\n        deleteFilm={deleteFilm}\r\n        setOpen={setShowDeleteModal}\r\n        open={showDeleteModal}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Film;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nexport const ProtectedRoute = ({ children }) => {\r\n  const data = useSelector(state => state.films);\r\n    console.log(Object.keys(data).length)\r\n\r\n    if (!Object.keys(data).length) {\r\n      return <Navigate to={{ pathname: '/' }} replace />;\r\n    }\r\n    return children;\r\n\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FilmList from \"./components/FilmList\";\r\nimport Header from \"./components/Header\";\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport Film from \"./components/Film\";\r\nimport { ProtectedRoute } from \"./components/ProtectedRoute\";\r\nimport { fetchFilms } from \"./actions\";\r\n\r\nconst App = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n  const { darkMode } = useSelector((state) => state.theme);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchFilms());\r\n  }, []);\r\n\r\n  return (\r\n    <div className={darkMode ? \"App inverse\" : \"App\"}>\r\n      <BrowserRouter>\r\n      <Header />\r\n      <Routes>\r\n      <Route path='/' element={<FilmList />} />\r\n      <Route path='/movie/:id'\r\n      element={\r\n        <ProtectedRoute >\r\n          <Film />\r\n        </ProtectedRoute>\r\n      }\r\n      />\r\n      </Routes>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport films from \"./filmReducer\";\r\nimport theme from \"./themeReducer\";\r\n\r\nexport default combineReducers({\r\n  films,\r\n  theme,\r\n});\r\n","import { EDIT_FILM, FETCH_FILMS, REMOVE_FILM, ADD_FILM } from \"../constants\";\r\nimport _ from \"lodash\";\r\n\r\nexport default function (state = {}, action) {\r\n  const { payload, type } = action;\r\n  switch (type) {\r\n    case FETCH_FILMS: {\r\n      return { ...state, ..._.mapKeys(payload, \"imdbID\") };\r\n    }\r\n    case REMOVE_FILM: {\r\n      return _.omit(state, payload);\r\n    }\r\n    case EDIT_FILM: {\r\n      return { ...state, [payload.imdbID]: payload };\r\n    }\r\n    case ADD_FILM: {\r\n      return { ...state, [payload.imdbID]: payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { TOGGLE_DARK_MODE } from \"../constants\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case TOGGLE_DARK_MODE: {\r\n      return { ...state, darkMode: !state.darkMode };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}